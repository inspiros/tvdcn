name: Build

on: push
#on:
#  push:
#    tags:
#      - 'v*'

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-sdist
          path: dist/*.tar.gz

  build_wheels:
    name: Build wheel on ${{ matrix.os }} for cp-${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04, macos-14, windows-2019 ]
        python-version: [ '3.9', '3.10', '3.11', '3.12', '3.13' ]
        torch-version: [ 2.7.0 ]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

#      - name: Free Disk Space (Ubuntu)
#        if: ${{ runner.os == 'Linux' }}
#        uses: jlumbroso/free-disk-space@main

      - name: Install ninja-build
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Install CUDA
        run: |
          bash .github/workflows/cuda/${{ runner.os }}.sh

      - name: Upgrade build tools
        run: |
          pip install --upgrade setuptools wheel

      - name: Install PyTorch ${{ matrix.torch-version }}
        run: |
          pip install torch==${{ matrix.torch-version }} --extra-index-url https://download.pytorch.org/whl/${{ runner.os == 'macOS' && 'cpu' || 'cu128' }}
          python -c "import torch; print('PyTorch:', torch.__version__); print('CUDA:', torch.version.cuda)"

      - name: Build wheel
        run: |
          source .github/workflows/cuda/${{ runner.os }}-env.sh
          python setup.py bdist_wheel --dist-dir=wheelhouse
# ${{ runner.os == 'Linux' && 'dist' || 'wheelhouse' }}
        shell:
          bash

#      - name: Repair wheel (Ubuntu)
#        if: ${{ runner.os == 'Linux' }}
#        run: |
#          pip install auditwheel patchelf
#          python tools/packaging/audit_torch_extension.py repair --plat manylinux_2_39_x86_64 dist/*.whl
#          rm -r dist

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-bdist-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  publish_on_pypi:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: [ build_sdist, build_wheels ]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          pattern: artifacts-*
          path: dist
          merge-multiple: true

      - name: Publish wheels to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
